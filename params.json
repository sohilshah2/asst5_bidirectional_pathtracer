{"name":"Assignment 5: Bidirectional Pathtracer","tagline":"","body":"# Assignment 5 Project Idea Proposal\r\n#### Author: Sohil Shah (sohils)\r\nFor this project, I would like to implement a bidirectional path tracing algorithm by extending the assignment 3 code. The main goal of this would be to render correct images with lower variance according to the same wall clock time. This should also help greatly with effects such as caustics due to the faster convergence of the integral. \r\n## Plan\r\nTo accomplish this project, these are the things that need to be done:  \r\n        1. The pathtracer will be modified to shoot rays from both the light sources and the camera.  \r\n        2. The rays from light sources and the camera will then be independently traced.  \r\n        3. Endpoints from each of the two types of ray paths will be connected to compute contribution of radiance along each path.  \r\n        4. Finally, each path will be weighted according to the probability of choosing that path connection.  \r\n\r\n## Ideal Result\r\nA correct implementation of this project will have the following features:  \r\n        1. The project must converge to the same correct and unbiased images produced by the assignment 3 pathtracer.  \r\n        2. Bidirectional pathtracing must converge faster than the original pathtracer.  \r\n        3. Bidirectional pathtracing must converge in fewer samples per pixel than the original pathtracer.  \r\n  \r\nImages such as these shown below describe how bidirectional should look compared to regular pathtracing. The goal of this project is to match these results.  \r\n  \r\n![](http://celarek.at/wp/wp-content/uploads/2014/06/veach_scene.jpg)  \r\nSource: http://celarek.at/2014/06/global-illumination-rendering-using-path-tracing-and-bidirectional-path-tracing  \r\n  \r\n![](https://adventuresinrendering.files.wordpress.com/2014/01/unidirectionalvsbidirectional-indirect-lighting-comparison.jpg)\r\nSource: https://adventuresinrendering.wordpress.com/  \r\n\r\n## Potential Problems\r\nThe problems anticipated here mostly lie with the calculation of the probability of choosing a path. However, there is enough research already available on the internet about the subject that this should not pose an issue. If you have any comments on parts of this project that might pose a problem or could be particularly difficult please contact me.  \r\n  \r\n  \r\n# Actual Results and Implementation\r\nThe result of this project is a fairly successful bidirectional pathtracer. This pathtracer seems to do well rendering more interesting caustic effects and results in lower variance for many scenes. Its shortcomings are higher render time for identical sample count (which is expected) and high variance when a scene has a lot of delta materials. This is likely due to some mistakes in calculating pdfs when the path contains deltas. More work would have to go into calculating these distributions to reduce variance when a scene has lots of mirrors or glass. However, the implementation does give a lot of nice results.\r\n  \r\n## Result images\r\n![](https://cloud.githubusercontent.com/assets/7096456/11853754/d7695b20-a40d-11e5-989f-5299fd82b143.png)  \r\nBidirectional: 2048 samples  \r\n![](https://cloud.githubusercontent.com/assets/7096456/11853767/ec73fbc4-a40d-11e5-99b4-71a4b7aad3e2.png)  \r\nStandard Pathtracing: 4096 samples  \r\nHere we can see a lower amount of noise with fewer samples. The bidirectional render finished quicker than the standard pathtracing version (about 1.3x faster). Even with fewer samples, the bidirectional render can be seen to have lower variance in areas that are hard to sample such as this shadow. \r\n  \r\n  \r\n![](https://cloud.githubusercontent.com/assets/7096456/11853753/d767ee8e-a40d-11e5-8a18-92f8d368a579.png)  \r\nBidirectional: Much better caustic sampling  \r\nOne thing we notice with the bidirectional renderer is that caustics are much more prominent. We can see effects that were not visible with standard pathtracing. See below for more examples.  \r\n  \r\n  \r\n![](https://cloud.githubusercontent.com/assets/7096456/11853752/d767c616-a40d-11e5-80b4-a98342a4bb85.png)  \r\nBidirectional Caustics  \r\n![](https://cloud.githubusercontent.com/assets/7096456/11853769/ec78a4e4-a40d-11e5-9ea7-64aa82ea3eec.png)  \r\nStandard Pathtracing Caustics  \r\nThis scene looks much better lit with bidirectional rendering.  \r\n  \r\n![](https://cloud.githubusercontent.com/assets/7096456/11853751/d767b842-a40d-11e5-9dc5-3959b8811aa8.png)  \r\nBidirectional Caustics  \r\n![](https://cloud.githubusercontent.com/assets/7096456/11853768/ec77b37c-a40d-11e5-92de-e1213105b9c7.png)  \r\nStandard Pathtracing Caustics  \r\nNotice the caustic from the mirror dragon on the floor of the box. This was not visible before.  \r\n  \r\n  \r\n# Known Implementation Problems  \r\n\r\n# Build Instructions","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}